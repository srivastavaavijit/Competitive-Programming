Problem Link: https://leetcode.com/problems/split-array-largest-sum/description/

Hint: Application Of Painter's Partition Problem.

Solution:
int check(int mid, vector<int> arr, int k){
        int n = arr.size();
        int subarray_sum_left = 0;
        int subarray_count = 0;
        for(int i=0; i<n; i++){
            if(subarray_sum_left >= arr[i]){
                subarray_sum_left -= arr[i];
            }
            else{
                subarray_count++;
                subarray_sum_left = mid;
                if(subarray_count > k){
                    return 0;
                }
                else{
                    if(subarray_sum_left >= arr[i]){
                        subarray_sum_left -= arr[i];
                    }
                    else{
                        return 0;
                    }
                }
            }
        }
        return 1;
    }
    int splitArray(vector<int>& arr, int k) {
        int sum = 0;
        for(int i=0; i<arr.size(); i++){
            sum += arr[i];
        }
        int lo = 0, hi = sum, ans = -1;
        while(lo <= hi){
            int mid = (lo+(hi-lo)/2);
            if(check(mid,arr,k) == 1){
                ans = mid;
                hi = mid - 1;
            }
            else{
                lo = mid + 1;
            }
        }
        return ans;
    }
