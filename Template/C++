Basic Template used in the code:

#include <bits/stdc++.h>
using namespace std; 

/* UTILS */
#define MOD 1000000007
#define PI 3.14159265359
#define ll long long int

/* FUNCTIONS */
 ll min(ll a,int b) { if (a<b) return a; return b; }
 ll min(int a,ll b) { if (a<b) return a; return b; }
 ll max(ll a,int b) { if (a>b) return a; return b; }
 ll max(int a,ll b) { if (a>b) return a; return b; }
 ll gcd(ll a,ll b) { if (b==0) return a; return gcd(b, a%b); }
 ll lcm(ll a,ll b) { return a/gcd(a,b)*b; }
 string to_upper(string a) { for (int i=0;i<(int)a.size();++i) if (a[i]>='a' && a[i]<='z') a[i]-='a'-'A'; return a; }
 string to_lower(string a) { for (int i=0;i<(int)a.size();++i) if (a[i]>='A' && a[i]<='Z') a[i]+='a'-'A'; return a; }
 bool prime(ll a) { if (a==1) return 0; for (int i=2;i<=round(sqrt(a));++i) if (a%i==0) return 0; return 1; }
 void yes() { cout<<"YES\n"; }
 void no() { cout<<"NO\n"; }
 vector<int> prefixSum(vector<int> arr){vector<int> pSum(arr.size());pSum[0] = arr[0];for(int i=1; i<arr.size(); i++){pSum[i] = pSum[i-1] + arr[i];}return pSum;}
 vector<vector<int>> prefixSum2D(vector<vector<int>> v, int n, int m){vector<vector<int>> pSum(n, vector<int>(m));for(int i=0; i<4; i++){for(int j=0; j<4; j++){if(i > 0){pSum[i][j] += pSum[i-1][j];}if(j > 0){pSum[i][j] += pSum[i][j-1];}if(i >0 && j > 0){pSum[i][j] -= pSum[i-1][j-1];}pSum[i][j] += v[i][j];}}return pSum;}
 void printVE(vector<int> ans){for(int i=0; i<ans.size(); i++)cout << ans[i] << " ";}
 void print2DVE(vector<vector<int>> matrix){for (const auto& row : matrix) {for (int val : row) {cout << val << " ";}cout << endl;}}
 void printA(int* arr, int n){for(int i=0; i<n; i++){cout << arr[i] << " ";}}
 vector<int> divisors(ll n){vector<int> divs;for(int i=1; i<=sqrt(n); i++){if(n%i==0){if(i != n/i){divs.push_back(i);divs.push_back(n/i);}else divs.push_back(i);}}sort(divs.begin(), divs.end());return divs;}
 int countDigit(long long n) { return floor(log10(n) + 1); }
 ll digitsSum(ll n){ll sum = 0;while(n>0){ll digit = n%10;sum += digit;n=n/10;}return sum;}
 bool isPerfectSquare(long long n) {if (n == 0) return true;long long odd = 1;while (n > 0) {n -= odd;odd += 2;}return n == 0;}
// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

int main() {
	ios_base::sync_with_stdio(0);
	cin.tie(0);

	int t;cin>>t;
	while(t--){
		
	}
}
